const SpecialKeyCodes={Backspace:8,ShiftLeft:16,ControlLeft:17,AltLeft:18,ShiftRight:253,ControlRight:254,AltRight:255},MouseButton={MainButton:0,AuxiliaryButton:1,SecondaryButton:2,FourthButton:3,FifthButton:4},MouseButtonsMask={1:0,2:2,4:1,8:3,16:4},RECEIVE={QualityControlOwnership:0,Response:1,Command:2,FreezeFrame:3,UnfreezeFrame:4,VideoEncoderAvgQP:5,LatencyTest:6,InitialSettings:7,FileExtension:8,FileMimeType:9,FileContents:10,InputControlOwnership:12,Protocol:255},SEND={IFrameRequest:0,RequestQualityControl:1,FpsRequest:2,AverageBitrateRequest:3,StartStreaming:4,StopStreaming:5,LatencyTest:6,RequestInitialSettings:7,UIInteraction:50,Command:51,KeyDown:60,KeyUp:61,KeyPress:62,MouseEnter:70,MouseLeave:71,MouseDown:72,MouseUp:73,MouseMove:74,MouseWheel:75,TouchStart:80,TouchEnd:81,TouchMove:82,GamepadButtonPressed:90,GamepadButtonReleased:91,GamepadAnalog:92};let iceServers;class PeerStream extends HTMLVideoElement{constructor(){super(),window.ps=this,this.ws={send(){},close(){}},this.pc={close(){}},this.setupVideo(),this.registerKeyboardEvents(),this.registerMouseHoverEvents(),this.registerFakeMouseEvents(),document.addEventListener("pointerlockchange",(()=>{document.pointerLockElement===this?this.registerPointerLockEvents():this.registerMouseHoverEvents()}),!1),this.addEventListener("loadeddata",(e=>{this.style["aspect-ratio"]=this.videoWidth/this.videoHeight}))}async connectedCallback(){this.isConnected&&("connected"!==this.pc.connectionState||"open"!==this.dc.readyState||1!==this.ws.readyState?(this.ws.onclose=null,this.ws.close(1e3),this.ws=new WebSocket(this.id||location.href.replace(/^http/,"ws"),"peer-stream"),this.ws.onerror,this.ws.onopen=()=>{console.info("✅",this.ws)},this.ws.onmessage=e=>{this.onWebSocketMessage(e.data)},this.ws.onclose=e=>{console.warn(e),this.dispatchEvent(new CustomEvent("playerdisconnected",{})),clearTimeout(this.reconnect),this.reconnect=setTimeout((()=>this.connectedCallback()),3e3)}):this.play())}disconnectedCallback(){setTimeout((()=>{this.isConnected||(this.ws.close(1e3),this.pc.close(),console.log("❌ peer connection closing"))}),5e3)}adoptedCallback(){}static observedAttributes=["id"];attributeChangedCallback(e,t,s){this.isConnected&&this.ws.close(1e3)}async onWebSocketMessage(e){try{e=JSON.parse(e)}catch{return void console.debug("↓↓",e)}if("offer"===e.type){this.setupPeerConnection();const t=new RTCSessionDescription(e);console.log("↓↓ offer",t),await this.pc.setRemoteDescription(t),this.pc.addTransceiver("video",{direction:"recvonly"});const s=await this.pc.createAnswer();await this.pc.setLocalDescription(s),console.log("↑↑ answer",s),this.ws.send(JSON.stringify(s));for(let e of this.pc.getReceivers())e.playoutDelayHint=0}else if("iceCandidate"===e.type){const t=new RTCIceCandidate(e.candidate);console.log("↓↓ candidate:",t),await this.pc.addIceCandidate(t)}else if("answer"===e.type){const t=new RTCSessionDescription(e);await this.pc.setRemoteDescription(t),console.log("↓↓ answer:",t);for(const e of this.pc.getReceivers())e.playoutDelayHint=0}else"playerqueue"===e.type?(this.dispatchEvent(new CustomEvent("playerqueue",{detail:e})),console.log("↓↓ playerqueue:",e)):"seticeServers"===e.type?(iceServers=e.iceServers,console.log("↓↓ seticeServers:",e)):"playerConnected"===e.type?(console.log("↓↓ playerConnected:",e),this.setupPeerConnection_ue4(),this.setupDataChannel_ue4()):"ping"===e.type?(console.log("↓↓ ping:",e),e.type="pong",this.ws.send(JSON.stringify(e))):console.warn("↓↓",e)}onDataChannelMessage(e){e=new Uint8Array(e);const t=new TextDecoder("utf-16");switch(e[0]){case RECEIVE.VideoEncoderAvgQP:this.VideoEncoderQP=+t.decode(e.slice(1));break;case RECEIVE.Response:{const s=t.decode(e.slice(1));this.dispatchEvent(new CustomEvent("message",{detail:s})),console.info(s);break}case RECEIVE.Command:{const s=JSON.parse(t.decode(e.slice(1)));console.info("↓↓ command:",s),"onScreenKeyboard"===s.command&&console.info("You should setup a on-screen keyboard");break}case RECEIVE.FreezeFrame:{new DataView(e.slice(1,5).buffer).getInt32(0,!0);const t=e.slice(5);console.info("↓↓ freezed frame:",t);break}case RECEIVE.UnfreezeFrame:console.info("↓↓ 【unfreeze frame】");break;case RECEIVE.LatencyTest:{const s=JSON.parse(t.decode(e.slice(1)));console.info("↓↓ latency timings:",s);break}case RECEIVE.QualityControlOwnership:this.QualityControlOwnership=0!==e[1],console.info("↓↓ Quality Control Ownership:",this.QualityControlOwnership);break;case RECEIVE.InitialSettings:this.InitialSettings=JSON.parse(t.decode(e.slice(1))),console.log("↓↓ initial setting:",this.InitialSettings);break;case RECEIVE.InputControlOwnership:this.InputControlOwnership=0!==e[1],console.log("↓↓ input control ownership:",this.InputControlOwnership);break;case RECEIVE.Protocol:{let s=JSON.parse(t.decode(e.slice(1)));if(console.log(s),0===s.Direction)for(let e in s)SEND[e]=s[e].id;else if(1===s.Direction)for(let e in s)RECEIVE[e]=s[e].id;this.dc.send(new Uint8Array([SEND.RequestInitialSettings])),this.dc.send(new Uint8Array([SEND.RequestQualityControl]));break}default:console.error("↓↓ invalid data:",e)}}setupVideo(){this.tabIndex=0,this.playsInline=!0,this.disablepictureinpicture=!0,this.muted=!0,this.autoplay=!0,this.style["pointer-events"]="none",this.style["object-fit"]="fill"}setupDataChannel(e){this.dc=e.channel,this.dc.binaryType="arraybuffer",this.dc.onopen=e=>{console.log("✅",this.dc),this.style.pointerEvents="auto"},this.dc.onclose=e=>{console.info("❌ data channel closed"),this.style.pointerEvents="none",this.blur()},this.dc.onerror,this.dc.onmessage=e=>{this.onDataChannelMessage(e.data)}}setupDataChannel_ue4(e="hello"){this.dc=this.pc.createDataChannel(e,{ordered:!0}),this.dc.binaryType="arraybuffer",this.dc.onopen=t=>{console.log("✅ data channel connected:",e),this.style.pointerEvents="auto",this.dc.send(new Uint8Array([SEND.RequestInitialSettings])),this.dc.send(new Uint8Array([SEND.RequestQualityControl]))},this.dc.onclose=t=>{console.info("❌ data channel closed:",e),this.style.pointerEvents="none"},this.dc.onmessage=e=>{this.onDataChannelMessage(e.data)}}setupPeerConnection(){this.pc.close(),this.pc=new RTCPeerConnection({sdpSemantics:"unified-plan",bundlePolicy:"balanced",iceServers}),this.pc.ontrack=e=>{console.log(`↓↓ ${e.track.kind} track:`,e),"video"===e.track.kind?this.srcObject=e.streams[0]:"audio"===e.track.kind&&(this.audio=document.createElement("audio"),this.audio.autoplay=!0,this.audio.srcObject=e.streams[0])},this.pc.onicecandidate=e=>{e.candidate?.candidate&&(console.log("↑↑ candidate:",e.candidate),this.ws.send(JSON.stringify({type:"iceCandidate",candidate:e.candidate})))},this.pc.ondatachannel=e=>{this.setupDataChannel(e)}}setupPeerConnection_ue4(){this.pc.close(),this.pc=new RTCPeerConnection({sdpSemantics:"unified-plan",bundlePolicy:"balanced",iceServers}),this.pc.ontrack=e=>{console.log(`↓↓ ${e.track.kind} track:`,e),"video"===e.track.kind?this.srcObject=e.streams[0]:"audio"===e.track.kind&&(this.audio=document.createElement("audio"),this.audio.autoplay=!0,this.audio.srcObject=e.streams[0])},this.pc.onicecandidate=e=>{e.candidate?.candidate&&(console.log("↑↑ candidate:",e.candidate),this.ws.send(JSON.stringify({type:"iceCandidate",candidate:e.candidate})))},this.pc.onnegotiationneeded=e=>{this.setupOffer()}}async setupOffer(){const e=await this.pc.createOffer({offerToReceiveAudio:+this.hasAttribute("audio"),offerToReceiveVideo:1,voiceActivityDetection:!1});e.sdp=e.sdp.replace("useinbandfec=1","useinbandfec=1;stereo=1;sprop-maxcapturerate=48000"),this.pc.setLocalDescription(e),this.ws.send(JSON.stringify(e)),console.log("↓↓ sending offer:",e)}keysDown=new Set;registerKeyboardEvents(){this.onkeydown=e=>{const t=SpecialKeyCodes[e.code]||e.keyCode;this.dc.send(new Uint8Array([SEND.KeyDown,t,e.repeat])),this.keysDown.add(t)},this.onkeyup=e=>{const t=SpecialKeyCodes[e.code]||e.keyCode;this.dc.send(new Uint8Array([SEND.KeyUp,t])),this.keysDown.delete(t)},this.onkeypress=e=>{const t=new DataView(new ArrayBuffer(3));t.setUint8(0,SEND.KeyPress),t.setUint16(1,SpecialKeyCodes[e.code]||e.keyCode,!0),this.dc.send(t)},this.onblur=e=>{this.keysDown.forEach((e=>{this.dc.send(new Uint8Array([SEND.KeyUp,e]))})),this.keysDown.clear()}}registerTouchEvents(){const e=[9,8,7,6,5,4,3,2,1,0],t={};this.ontouchstart=s=>{for(const n of s.changedTouches){const s=e.pop();void 0===s&&console.info("exhausted touch indentifiers"),t[n.identifier]=s}this.emitTouchData(SEND.TouchStart,s.changedTouches,t),s.preventDefault()},this.ontouchend=s=>{this.emitTouchData(SEND.TouchEnd,s.changedTouches,t);for(const n of s.changedTouches)e.push(t[n.identifier]),delete t[n.identifier];s.preventDefault()},this.ontouchmove=e=>{this.emitTouchData(SEND.TouchMove,e.touches,t),e.preventDefault()}}registerFakeMouseEvents(){let e;const{left:t,top:s}=this.getBoundingClientRect();this.ontouchstart=n=>{if(void 0===e){const i=n.changedTouches[0];e={id:i.identifier,x:i.clientX-t,y:i.clientY-s},this.onmouseenter(n),this.emitMouseDown(MouseButton.MainButton,e.x,e.y)}n.preventDefault()},this.ontouchend=n=>{if(e)for(const i of n.changedTouches)if(i.identifier===e.id){const o=i.clientX-t,a=i.clientY-s;this.emitMouseUp(MouseButton.MainButton,o,a),this.onmouseleave(n),e=void 0;break}n.preventDefault()},this.ontouchmove=n=>{if(e)for(const i of n.touches)if(i.identifier===e.id){const n=i.clientX-t,o=i.clientY-s;this.emitMouseMove(n,o,n-e.x,o-e.y),e.x=n,e.y=o;break}n.preventDefault()}}registerMouseHoverEvents(){this.registerMouseEnterAndLeaveEvents(),this.onmousemove=e=>{this.emitMouseMove(e.offsetX,e.offsetY,e.movementX,e.movementY),e.preventDefault()},this.onmousedown=e=>{this.emitMouseDown(e.button,e.offsetX,e.offsetY)},this.onmouseup=e=>{this.emitMouseUp(e.button,e.offsetX,e.offsetY)},this.oncontextmenu=e=>{this.emitMouseUp(e.button,e.offsetX,e.offsetY),e.preventDefault()},this.onwheel=e=>{this.emitMouseWheel(e.wheelDelta,e.offsetX,e.offsetY),e.preventDefault()}}registerPointerLockEvents(){this.registerMouseEnterAndLeaveEvents(),console.info("mouse locked in, ESC to exit");const{clientWidth:e,clientHeight:t}=this;let s=e/2,n=t/2;this.onmousemove=i=>{s+=i.movementX,n+=i.movementY,s=(s+e)%e,n=(n+t)%t,this.emitMouseMove(s,n,i.movementX,i.movementY)},this.onmousedown=e=>{this.emitMouseDown(e.button,s,n)},this.onmouseup=e=>{this.emitMouseUp(e.button,s,n)},this.onwheel=e=>{this.emitMouseWheel(e.wheelDelta,s,n)}}registerMouseEnterAndLeaveEvents(){this.onmouseenter=e=>{this.dc.send(new Uint8Array([SEND.MouseEnter]))},this.onmouseleave=e=>{"open"===this.dc.readyState&&this.dc.send(new Uint8Array([SEND.MouseLeave]));for(let t=1;t<=16;t*=2)e.buttons&t&&this.emitMouseUp(MouseButtonsMask[t],0,0)}}emitMouseMove(e,t,s,n){const i=this.normalize(e,t);s=65536*s/this.clientWidth,n=65536*n/this.clientHeight;const o=new DataView(new ArrayBuffer(9));o.setUint8(0,SEND.MouseMove),o.setUint16(1,i.x,!0),o.setUint16(3,i.y,!0),o.setInt16(5,s,!0),o.setInt16(7,n,!0),this.dc.send(o)}emitMouseDown(e,t,s){const n=this.normalize(t,s),i=new DataView(new ArrayBuffer(6));i.setUint8(0,SEND.MouseDown),i.setUint8(1,e),i.setUint16(2,n.x,!0),i.setUint16(4,n.y,!0),this.dc.send(i)}emitMouseUp(e,t,s){const n=this.normalize(t,s),i=new DataView(new ArrayBuffer(6));i.setUint8(0,SEND.MouseUp),i.setUint8(1,e),i.setUint16(2,n.x,!0),i.setUint16(4,n.y,!0),this.dc.send(i)}emitMouseWheel(e,t,s){const n=this.normalize(t,s),i=new DataView(new ArrayBuffer(7));i.setUint8(0,SEND.MouseWheel),i.setInt16(1,e,!0),i.setUint16(3,n.x,!0),i.setUint16(5,n.y,!0),this.dc.send(i)}emitTouchData(e,t,s){const n=new DataView(new ArrayBuffer(2+6*t.length));n.setUint8(0,e),n.setUint8(1,t.length);let i=2;for(const e of t){const t=e.clientX-this.offsetLeft,o=e.clientY-this.offsetTop,a=this.normalize(t,o);n.setUint16(i,a.x,!0),i+=2,n.setUint16(i,a.y,!0),i+=2,n.setUint8(i,s[e.identifier],!0),i+=1,n.setUint8(i,255*e.force,!0),i+=1}this.dc.send(n)}emitMessage(e,t=SEND.UIInteraction){"string"!=typeof e&&(e=JSON.stringify(e));const s=new DataView(new ArrayBuffer(3+2*e.length));let n=0;s.setUint8(n,t),n++,s.setUint16(n,e.length,!0),n+=2;for(let t=0;t<e.length;t++)s.setUint16(n,e.charCodeAt(t),!0),n+=2;return this.dc.send(s),new Promise((e=>this.addEventListener("message",(t=>e(t.detail)),{once:!0})))}normalize(e,t){const s=e/this.clientWidth,n=t/this.clientHeight;return s<0||s>1||n<0||n>1?{inRange:!1,x:65535,y:65535}:{inRange:!0,x:65536*s,y:65536*n}}}customElements.define("peer-stream",PeerStream,{extends:"video"});